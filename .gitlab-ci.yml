before_script:
  - export DEBIAN_FRONTEND=noninteractive
  - apt-get update -yq && apt-get install -y curl lsb-release lintian
  - export DISTRO_CODENAME=`lsb_release -cs` && echo Using distro $DISTRO_CODENAME
  - echo "deb http://apt.roboception.de/stable $DISTRO_CODENAME main" > /etc/apt/sources.list.d/roboception-stable.list
  - if [ "$TESTING_DEBS" = "true" ]; then echo "deb http://apt.roboception.de/testing $DISTRO_CODENAME main" > /etc/apt/sources.list.d/roboception-testing.list ; fi
  - curl http://apt.roboception.de/archive.key | apt-key add -
  - apt-get update -yq && apt-get install -y libopencv-dev rc-genicam-api

variables:
  GET_SOURCES_ATTEMPTS: 3

#########################
# Templates using anchors
#########################
.amd64_focal_t: &amd64_focal_job
  image: registry.roboception.de/tools/docker_images:focal-buildimage
  tags:
    - amd64
    - docker

.amd64_jammy_t: &amd64_jammy_job
  image: registry.roboception.de/tools/docker_images:jammy-buildimage
  tags:
    - amd64
    - docker

#############
# Templates
#############
.test:
  stage: test
  script:
    - mkdir build && cd build
    - cmake ..
    - make -j 4
    - CTEST_OUTPUT_ON_FAILURE=1 make test

##############
#### Jobs ####
##############
gen_dox:
  <<: *amd64_focal_job
  variables:
    TESTING_DEBS: "true"
  stage: deploy
  script:
    - apt-get install -y doxygen ncftp
    - mkdir build && cd build
    - cmake ..
    - make doc
    - upload_dox.sh doc/html
  only:
    - master
    - tags
  tags:
    - docs

test:focal:amd64:
  <<: *amd64_focal_job
  extends: .test

test:jammy:amd64:
  <<: *amd64_jammy_job
  extends: .test
