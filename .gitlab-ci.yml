before_script:
  - export DISTRO_CODENAME=`lsb_release -cs` && echo Using distro $DISTRO_CODENAME
  - echo "deb http://apt.roboception.de/stable $DISTRO_CODENAME main" > /etc/apt/sources.list.d/roboception-stable.list
  - if [ "$TESTING_DEBS" = "true" ]; then echo "deb http://apt.roboception.de/testing $DISTRO_CODENAME main" > /etc/apt/sources.list.d/roboception-testing.list ; fi
  - curl http://apt.roboception.de/archive.key | apt-key add -
  - apt-get update -yq && apt-get install -y lintian rc-genicam-api ros-${ROS_DISTRO}-opencv3

#############
# Templates
#############
.amd64_template: &amd64_job   # Hidden job that defines an anchor named 'amd64_job'
  image: registry.roboception.de/tools/docker_images:indigo-perception-pcl
  tags:
    - amd64
    - docker

.armhf_template: &armhf_job   # Hidden job that defines an anchor named 'armhf_job'
  image: registry.roboception.de/tools/docker_images:armhf-indigo-perception
  tags:
    - armhf
    - docker

.amd64_xenial_template: &amd64_xenial_job
  image: ros:kinetic-perception
  tags:
    - amd64
    - docker

.armhf_xenial_template: &armhf_xenial_job
  image: registry.roboception.de/tools/docker_images:armhf-kinetic-perception
  tags:
    - armhf
    - docker

.test_t: &test
  stage: test
  script:
    - mkdir build
    - cd build
    - cmake ..
    - make -j 4
    - CTEST_OUTPUT_ON_FAILURE=1 make test

# run test script with latest debs from testing installed
.test_latest_t: &test_latest
  <<: *test
  variables:
    TESTING_DEBS: "true"

# run test script with released debs from stable installed (allowed to fail)
.test_stable_t: &test_stable
  <<: *test
  allow_failure: true
  except:
    - /^v[0-9]+\.[0-9]+\.[0-9]+/

# run test script with released debs from stable (only for releases, mustn't fail)
.test_release_t: &test_release
  <<: *test
  only:
    - /^v[0-9]+\.[0-9]+\.[0-9]+/
  except:
    - branches

.package_testing_t: &package_testing
  stage: deploy
  environment:
    name: testing/$DISTRO_CODENAME
  variables:
    TESTING_DEBS: "true"
  script:
    - mkdir build
    - cd build
    - cmake ..
    - make -j 4
    - make gen_deps && make package
    - upload_deb.sh $DISTRO_CODENAME-testing *.deb
  only:
    - master

.package_stable_t: &package_stable
  stage: deploy
  environment:
    name: stable/$DISTRO_CODENAME
  script:
    - mkdir build
    - cd build
    - cmake ..
    - make -j 4
    - make gen_deps && make package
    - upload_deb.sh $DISTRO_CODENAME-stable *.deb
  only:
    - /^v[0-9]+\.[0-9]+\.[0-9]+/
  except:
    - branches

##############
#### Jobs ####
##############
gen_dox:
  <<: *amd64_job
  variables:
    TESTING_DEBS: "true"
  stage: deploy
  script:
    - apt-get install -y doxygen ncftp
    - mkdir build
    - cd build
    - cmake ..
    - make doc
    - upload_dox.sh doc/html
  only:
    - master
    - tags
  tags:
    - docs

# Test against latest (on every commit)
#######################################
test_amd64:
  <<: *amd64_job
  <<: *test_latest

test_armhf:
  <<: *armhf_job
  <<: *test_latest

test_xenial_amd64:
  <<: *amd64_xenial_job
  <<: *test_latest

test_xenial_armhf:
  <<: *armhf_xenial_job
  <<: *test_latest

# Test against stable (is allowed to fail)
##########################################
test_stable_amd64:
  <<: *amd64_job
  <<: *test_stable

test_stable_armhf:
  <<: *armhf_job
  <<: *test_stable

test_stable_xenial_amd64:
  <<: *amd64_xenial_job
  <<: *test_stable

test_stable_xenial_armhf:
  <<: *armhf_xenial_job
  <<: *test_stable

# Deploy testing (only on master)
#################################
package_testing_amd64:
  <<: *amd64_job
  <<: *package_testing

package_testing_armhf:
  <<: *armhf_job
  <<: *package_testing

package_testing_xenial_amd64:
  <<: *amd64_xenial_job
  <<: *package_testing

package_testing_xenial_armhf:
  <<: *armhf_xenial_job
  <<: *package_testing

# Test against stable if it is a release
########################################
test_release_amd64:
  <<: *amd64_job
  <<: *test_release

test_release_armhf:
  <<: *armhf_job
  <<: *test_release

test_release_xenial_amd64:
  <<: *amd64_xenial_job
  <<: *test_release

test_release_xenial_armhf:
  <<: *armhf_xenial_job
  <<: *test_release

# Deploy stable (only for releases, version tags)
#################################################
package_stable_amd64:
  <<: *amd64_job
  <<: *package_stable

package_stable_armhf:
  <<: *armhf_job
  <<: *package_stable

package_stable_xenial_amd64:
  <<: *amd64_xenial_job
  <<: *package_stable

package_stable_xenial_armhf:
  <<: *armhf_xenial_job
  <<: *package_stable
